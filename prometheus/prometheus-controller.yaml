apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: prometheus
  name: prometheus
  namespace: default
spec:
  replicas: 1
  selector:
    name: prometheus
  template:
    metadata:
      labels:
        name: prometheus
    spec:
      containers:
      - env:
        - name: DATABASE_URL
          value: sqlite3:/promdash/file.sqlite3
        image: prom/promdash
        imagePullPolicy: IfNotPresent
        name: promdash
        ports:
        - containerPort: 3000
          hostPort: 3000
          protocol: TCP
        volumeMounts:
        - mountPath: /promdash
          name: data
      - args:
        - -t
        - KUBERNETES_RO,PROMETHEUS
        - -d
        - /var/prometheus
        env:
        - name: KUBERNETES_RO_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_RO_SERVICE_PORT
          value: '8001'
        - name: PROMETHEUS_SERVICE_HOST
          value: localhost
        - name: PROMETHEUS_SERVICE_PORT
          value: '9090'
        image: quay.io/spiffxp/prometheus:latest
        imagePullPolicy: Always
        name: prometheus
        ports:
        - containerPort: 9090
          hostPort: 9090
          protocol: TCP
        volumeMounts:
        - mountPath: /var/prometheus/
          name: data
      - args:
        - proxy
        - --port=8001
        - --api-prefix=/
        - --server=https://kubernetes
        - --insecure-skip-tls-verify=true
        - --api-version=v1
        - --logtostderr=true
        - --v=2
        image: gcr.io/google_containers/kubectl:v0.18.0-350-gfb3305edcf6c1a
        imagePullPolicy: IfNotPresent
        name: kubectl-proxy
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /mnt/promdash
        name: data
